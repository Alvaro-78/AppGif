{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","components/GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","console","log","onSubmit","e","preventDefault","trim","length","cats","className","type","name","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","src","alt","GifGrid","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLA8CeA,EA3CK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAFAC,QAAQC,IAAIH,GAGV,mCACE,uBAAMI,SAhBW,SAAAC,GACnBA,EAAEC,iBAGEN,EAAWO,OAAOC,OAAS,GAC7BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,KAEdC,QAAQC,IAAI,iBAQZ,UACE,qBAAKO,UAAU,YAAf,SACE,uBACEC,KAAK,OACLC,KAAK,QACLC,MAAOb,EACPc,SA1BgB,SAAAT,GACxBJ,EAAcI,EAAEU,OAAOF,YA4BnB,uBACA,wBAAQF,KAAK,SAAb,gC,+BChBOK,EAnBF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACRC,EADQ,iDACwCC,UACpDH,GAFY,+DAIKI,MAAMF,GAJX,cAIRG,EAJQ,gBAKSA,EAAKC,OALd,uBAKNC,EALM,EAKNA,KAERtB,QAAQC,IAAIqB,GAENC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbxB,kBAgBPM,GAhBO,4CAAH,sDCuBEO,EArBM,SAAAf,GACnB,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAAAC,GACrBC,YAAW,WACTrC,QAAQC,IAAImC,GACZH,EAAS,CACPX,KAAMc,EACNL,SAAS,MAEV,UAEJ,CAAChB,IAEGiB,GCRMM,EAXK,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,mCACE,sBAAKT,UAAU,yCAAf,UACE,qBAAKA,UAAU,MAAM+B,IAAKtB,EAAKuB,IAAKb,IACpC,mBAAGnB,UAAU,aAAb,SAA2BmB,UCiBpBc,EApBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SACjB,EAAkCe,EAAaf,GAAjCa,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAItB,OAFA/B,QAAQC,IAAI8B,GAGV,qCACE,oBAAIvB,UAAU,mCAAd,SAAkDO,IACjDgB,GACC,mBAAGvB,UAAU,mCAAb,wBAEF,qBAAKA,UAAU,YAAf,SACGoB,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCejBgB,EA5BA,WACb,MAAoC7C,mBAAS,CAAC,WAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAIA,OAFAI,QAAQC,IAAI0C,GAGV,qCACE,qBAAKnC,UAAU,eAAf,SACE,8BACE,oBAAIA,UAAU,QAAd,wBAGJ,gCACE,8DACA,cAAC,EAAD,CAAaZ,cAAeA,OAE9B,uBAEA,uBACA,6BACG+C,EAAWnB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCnBxB6B,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,W","file":"static/js/main.13248053.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Recibimos por props el estado del componente padre y con el spred operator\n    //  le pasamos el nuevo estado con el value del input.\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats]);\n      setInputValue('');\n    } else {\n      console.log('escribe algo');\n    }\n  };\n\n  console.log(inputValue);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className='input-div'>\n          <input\n            type='text'\n            name='input'\n            value={inputValue}\n            onChange={handleInputChange}\n          ></input>\n        </div>\n        <br />\n        <button type='submit'>AÃ±adir...</button>\n      </form>\n    </>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","//  encodeURI nos soluciona los errores que pueda dar la url\nconst getGifs = async category => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category,\n  )}&limit=20&api_key=RSnS98lIRy8kdgDH5qUR3kjiSYEtHUk5`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  console.log(data);\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n\nexport default getGifs;\n","import { useState, useEffect } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nconst useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then(imgs => {\n      setTimeout(() => {\n        console.log(imgs);\n        setState({\n          data: imgs,\n          loading: false,\n        });\n      }, 2000);\n    });\n  }, [category]);\n\n  return state;\n};\n\nexport default useFetchGifs;\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <>\n      <div className='card animate__animated animate__fadeIn'>\n        <img className='img' src={url} alt={title}></img>\n        <p className='card-title'>{title}</p>\n      </div>\n    </>\n  );\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport GifGridItem from '../components/GifGridItem';\n\nconst GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  console.log(loading);\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeI'>{category}</h3>\n      {loading && (\n        <p className='animate__animated animate__flash'>Loading...</p>\n      )}\n      <div className='card-grid'>\n        {images.map(img => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import React, { useState } from 'react';\nimport AddCategory from '../components/AddCategory';\nimport GifGrid from './GifGrid';\n\nconst GifApp = () => {\n  const [categories, setCategories] = useState(['random']);\n\n  console.log(categories);\n\n  return (\n    <>\n      <div className='header-title'>\n        <div>\n          <h1 className='title'>GifApp</h1>\n        </div>\n      </div>\n      <div>\n        <h2>Encuentra tus Gifs favoritos</h2>\n        <AddCategory setCategories={setCategories} />\n      </div>\n      <br />\n\n      <hr />\n      <ol>\n        {categories.map(category => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GifApp from '../src/components/GifApp'\n\nimport './index.css'\n\nReactDOM.render(<GifApp />, document.getElementById('root'))\n"],"sourceRoot":""}